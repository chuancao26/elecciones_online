"""adding lista candidato table, and modifying user and password to the sons

Revision ID: 7fd94f41ee94
Revises: 8c59b332e9bc
Create Date: 2024-08-27 09:28:29.784703

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7fd94f41ee94'
down_revision: Union[str, None] = '8c59b332e9bc'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('eleccion',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('fecha', sa.TIMESTAMP(timezone=True), nullable=False),
    sa.Column('hora_inicio', sa.Time(), nullable=False),
    sa.Column('hora_fin', sa.Time(), nullable=False),
    sa.Column('descripcion', sa.String(), server_default='', nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('lista',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('nombre', sa.String(), nullable=False),
    sa.Column('id_eleccion', sa.Integer(), nullable=False),
    sa.Column('propuesta', sa.String(), server_default='', nullable=False),
    sa.ForeignKeyConstraint(['id_eleccion'], ['eleccion.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('candidato',
    sa.Column('id', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('id_lista', sa.Integer(), nullable=False),
    sa.Column('id_persona', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['id_lista'], ['lista.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['id_persona'], ['persona.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.add_column('administrador', sa.Column('usuario', sa.String(), nullable=True))
    op.add_column('administrador', sa.Column('password', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'administrador', ['usuario'])
    op.add_column('elector', sa.Column('usuario', sa.String(), nullable=True))
    op.add_column('elector', sa.Column('password', sa.String(), nullable=False))
    op.create_unique_constraint(None, 'elector', ['usuario'])
    op.drop_constraint('persona_usuario_key', 'persona', type_='unique')
    op.drop_column('persona', 'usuario')
    op.drop_column('persona', 'password')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('persona', sa.Column('password', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('persona', sa.Column('usuario', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_unique_constraint('persona_usuario_key', 'persona', ['usuario'])
    op.drop_constraint(None, 'elector', type_='unique')
    op.drop_column('elector', 'password')
    op.drop_column('elector', 'usuario')
    op.drop_constraint(None, 'administrador', type_='unique')
    op.drop_column('administrador', 'password')
    op.drop_column('administrador', 'usuario')
    op.drop_table('candidato')
    op.drop_table('lista')
    op.drop_table('eleccion')
    # ### end Alembic commands ###
